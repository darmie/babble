package test1 (
    def adder = (a:int):(b:int):int -> (
        return (b:int):int -> (
            a + b
        )
    )

    def add = (a:int, b:int):int -> (
        a + b
    )

    def fac = (n:int):int -> (
        if n < 2 then (
            1
         ) else (
            n * recurse(n - 1)
         )
    )

    def fac2 = (n:int):int -> (
        def result = 1
        while n > 1 then (
            result = result * n ; n = n - 1
        )
        return result
    )

    def apply = (a, f=(v) -> (v)) -> ( f(a) )
)

def main = () -> (
    def local = "world !"
    println ("Hello, ", local)

    println("1+2=", test1.add(a:1,b:2))

    def result = test1.adder(2)(2)

    return "ok:" + result + ":" + test1.fac(5) + ":" + test1.fac2(6)
)

assert (1 < 2, "Something is wrong")

assert (test1.apply(1) == 1, "apply is broken")
assert (test1.apply(1, (v) -> (v+1)) == 1, "apply is broken")

main()